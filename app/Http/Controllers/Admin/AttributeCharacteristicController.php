<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\Category_characteristic;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Log;

class AttributeCharacteristicController extends Controller
{
//    public function store(Request $request)
//    {
//
//        $request->validate([
//            'category_id' => 'required|exists:categories,id',
//            'attributes' => 'required|array',
//            'attributes.*' => 'nullable|string|max:255',
//        ]);
//
////        foreach ($request->attributes as $attribute) {
////            if ($attribute !== null && $attribute !== '') {
////                Category_characteristic::create([
////                    'category_id' => $request->category_id,
////                    'attribute_characteristic' => $attribute,
////                ]);
////            }
////        }
//        foreach ($request->attributes as $attribute) {
//            if ($attribute !== null && $attribute !== '') {
//                Log::debug('–î–æ–±–∞–≤–ª—è—é —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É: ' . $attribute);
//                DB::table('category_characteristics')->insert([
//                    'category_id' => $request->category_id,
//                    'attribute_characteristic' => $attribute,
//                    'created_at' => now(),
//                    'updated_at' => now(),
//                ]);
//            }
//        }
//
//        return redirect()->back()->with('success', '–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
//    }
    public function store(Request $request)
    {
        Log::debug('‚û° –ù–∞—á–∞–ª–æ –º–µ—Ç–æ–¥–∞ store');

        $validated = $request->validate([
            'category_id' => 'required|exists:categories,id',
            'attributes' => 'required|array',
            'attributes.*' => 'nullable|string|max:255',
        ]);

        Log::debug('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞', ['validated' => $validated]);

        foreach ($request->attributes as $attribute) {
            Log::debug('‚öô –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏', ['attribute' => $attribute]);

            if ($attribute !== null && $attribute !== '') {
                try {
                    DB::table('category_characteristics')->insert([
                        'category_id' => $request->category_id,
                        'attribute_characteristic' => $attribute,
                        'created_at' => now(),
                        'updated_at' => now(),
                    ]);

                    Log::debug('‚úÖ –í—Å—Ç–∞–≤–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞', [
                        'category_id' => $request->category_id,
                        'attribute' => $attribute,
                    ]);
                } catch (\Throwable $e) {
                    Log::error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏', [
                        'error' => $e->getMessage(),
                        'attribute' => $attribute,
                    ]);
                }
            } else {
                Log::debug('‚è≠ –ü—Ä–æ–ø—É—â–µ–Ω –ø—É—Å—Ç–æ–π –∞—Ç—Ä–∏–±—É—Ç', ['attribute' => $attribute]);
            }
        }

        Log::debug('üèÅ –ö–æ–Ω–µ—Ü –º–µ—Ç–æ–¥–∞ store');

        return redirect()->back()->with('success', '–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    }
}
